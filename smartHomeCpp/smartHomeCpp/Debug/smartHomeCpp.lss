
smartHomeCpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000088c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000040  00800060  0000088c  00000920  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  008000a0  008000a0  00000960  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000990  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  000009cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001cbf  00000000  00000000  00000ad4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007f7  00000000  00000000  00002793  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d27  00000000  00000000  00002f8a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000260  00000000  00000000  00003cb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000736  00000000  00000000  00003f14  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d6c  00000000  00000000  0000464a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  000053b6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ec e8       	ldi	r30, 0x8C	; 140
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 3a       	cpi	r26, 0xA0	; 160
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 ea       	ldi	r26, 0xA0	; 160
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 3a       	cpi	r26, 0xAA	; 170
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <main>
  8a:	0c 94 44 04 	jmp	0x888	; 0x888 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <_Z9pinChangeii>:
char BtReadChar(){
	while(!(UCSRA & (1<<RXC)))
	{
	}
	return UDR;
}
  92:	67 2b       	or	r22, r23
  94:	09 f0       	breq	.+2      	; 0x98 <_Z9pinChangeii+0x6>
  96:	9f c0       	rjmp	.+318    	; 0x1d6 <_Z9pinChangeii+0x144>
  98:	00 97       	sbiw	r24, 0x00	; 0
  9a:	11 f4       	brne	.+4      	; 0xa0 <_Z9pinChangeii+0xe>
  9c:	d8 98       	cbi	0x1b, 0	; 27
  9e:	08 95       	ret
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	91 05       	cpc	r25, r1
  a4:	11 f4       	brne	.+4      	; 0xaa <_Z9pinChangeii+0x18>
  a6:	d9 98       	cbi	0x1b, 1	; 27
  a8:	08 95       	ret
  aa:	82 30       	cpi	r24, 0x02	; 2
  ac:	91 05       	cpc	r25, r1
  ae:	11 f4       	brne	.+4      	; 0xb4 <_Z9pinChangeii+0x22>
  b0:	da 98       	cbi	0x1b, 2	; 27
  b2:	08 95       	ret
  b4:	83 30       	cpi	r24, 0x03	; 3
  b6:	91 05       	cpc	r25, r1
  b8:	11 f4       	brne	.+4      	; 0xbe <_Z9pinChangeii+0x2c>
  ba:	db 98       	cbi	0x1b, 3	; 27
  bc:	08 95       	ret
  be:	84 30       	cpi	r24, 0x04	; 4
  c0:	91 05       	cpc	r25, r1
  c2:	11 f4       	brne	.+4      	; 0xc8 <_Z9pinChangeii+0x36>
  c4:	dc 98       	cbi	0x1b, 4	; 27
  c6:	08 95       	ret
  c8:	85 30       	cpi	r24, 0x05	; 5
  ca:	91 05       	cpc	r25, r1
  cc:	11 f4       	brne	.+4      	; 0xd2 <_Z9pinChangeii+0x40>
  ce:	dd 98       	cbi	0x1b, 5	; 27
  d0:	08 95       	ret
  d2:	86 30       	cpi	r24, 0x06	; 6
  d4:	91 05       	cpc	r25, r1
  d6:	11 f4       	brne	.+4      	; 0xdc <_Z9pinChangeii+0x4a>
  d8:	de 98       	cbi	0x1b, 6	; 27
  da:	08 95       	ret
  dc:	87 30       	cpi	r24, 0x07	; 7
  de:	91 05       	cpc	r25, r1
  e0:	11 f4       	brne	.+4      	; 0xe6 <_Z9pinChangeii+0x54>
  e2:	df 98       	cbi	0x1b, 7	; 27
  e4:	08 95       	ret
  e6:	8a 30       	cpi	r24, 0x0A	; 10
  e8:	91 05       	cpc	r25, r1
  ea:	11 f4       	brne	.+4      	; 0xf0 <_Z9pinChangeii+0x5e>
  ec:	c0 98       	cbi	0x18, 0	; 24
  ee:	08 95       	ret
  f0:	8b 30       	cpi	r24, 0x0B	; 11
  f2:	91 05       	cpc	r25, r1
  f4:	11 f4       	brne	.+4      	; 0xfa <_Z9pinChangeii+0x68>
  f6:	c1 98       	cbi	0x18, 1	; 24
  f8:	08 95       	ret
  fa:	8c 30       	cpi	r24, 0x0C	; 12
  fc:	91 05       	cpc	r25, r1
  fe:	11 f4       	brne	.+4      	; 0x104 <_Z9pinChangeii+0x72>
 100:	c2 98       	cbi	0x18, 2	; 24
 102:	08 95       	ret
 104:	8d 30       	cpi	r24, 0x0D	; 13
 106:	91 05       	cpc	r25, r1
 108:	11 f4       	brne	.+4      	; 0x10e <_Z9pinChangeii+0x7c>
 10a:	c3 98       	cbi	0x18, 3	; 24
 10c:	08 95       	ret
 10e:	8e 30       	cpi	r24, 0x0E	; 14
 110:	91 05       	cpc	r25, r1
 112:	11 f4       	brne	.+4      	; 0x118 <_Z9pinChangeii+0x86>
 114:	c4 98       	cbi	0x18, 4	; 24
 116:	08 95       	ret
 118:	8f 30       	cpi	r24, 0x0F	; 15
 11a:	91 05       	cpc	r25, r1
 11c:	11 f4       	brne	.+4      	; 0x122 <_Z9pinChangeii+0x90>
 11e:	c5 98       	cbi	0x18, 5	; 24
 120:	08 95       	ret
 122:	80 31       	cpi	r24, 0x10	; 16
 124:	91 05       	cpc	r25, r1
 126:	11 f4       	brne	.+4      	; 0x12c <_Z9pinChangeii+0x9a>
 128:	c6 98       	cbi	0x18, 6	; 24
 12a:	08 95       	ret
 12c:	81 31       	cpi	r24, 0x11	; 17
 12e:	91 05       	cpc	r25, r1
 130:	11 f4       	brne	.+4      	; 0x136 <_Z9pinChangeii+0xa4>
 132:	c7 98       	cbi	0x18, 7	; 24
 134:	08 95       	ret
 136:	84 31       	cpi	r24, 0x14	; 20
 138:	91 05       	cpc	r25, r1
 13a:	11 f4       	brne	.+4      	; 0x140 <_Z9pinChangeii+0xae>
 13c:	a8 98       	cbi	0x15, 0	; 21
 13e:	08 95       	ret
 140:	85 31       	cpi	r24, 0x15	; 21
 142:	91 05       	cpc	r25, r1
 144:	11 f4       	brne	.+4      	; 0x14a <_Z9pinChangeii+0xb8>
 146:	a9 98       	cbi	0x15, 1	; 21
 148:	08 95       	ret
 14a:	86 31       	cpi	r24, 0x16	; 22
 14c:	91 05       	cpc	r25, r1
 14e:	11 f4       	brne	.+4      	; 0x154 <_Z9pinChangeii+0xc2>
 150:	aa 98       	cbi	0x15, 2	; 21
 152:	08 95       	ret
 154:	87 31       	cpi	r24, 0x17	; 23
 156:	91 05       	cpc	r25, r1
 158:	11 f4       	brne	.+4      	; 0x15e <_Z9pinChangeii+0xcc>
 15a:	ab 98       	cbi	0x15, 3	; 21
 15c:	08 95       	ret
 15e:	88 31       	cpi	r24, 0x18	; 24
 160:	91 05       	cpc	r25, r1
 162:	11 f4       	brne	.+4      	; 0x168 <_Z9pinChangeii+0xd6>
 164:	ac 98       	cbi	0x15, 4	; 21
 166:	08 95       	ret
 168:	89 31       	cpi	r24, 0x19	; 25
 16a:	91 05       	cpc	r25, r1
 16c:	11 f4       	brne	.+4      	; 0x172 <_Z9pinChangeii+0xe0>
 16e:	ad 98       	cbi	0x15, 5	; 21
 170:	08 95       	ret
 172:	8a 31       	cpi	r24, 0x1A	; 26
 174:	91 05       	cpc	r25, r1
 176:	11 f4       	brne	.+4      	; 0x17c <_Z9pinChangeii+0xea>
 178:	ae 98       	cbi	0x15, 6	; 21
 17a:	08 95       	ret
 17c:	8b 31       	cpi	r24, 0x1B	; 27
 17e:	91 05       	cpc	r25, r1
 180:	11 f4       	brne	.+4      	; 0x186 <_Z9pinChangeii+0xf4>
 182:	af 98       	cbi	0x15, 7	; 21
 184:	08 95       	ret
 186:	8e 31       	cpi	r24, 0x1E	; 30
 188:	91 05       	cpc	r25, r1
 18a:	11 f4       	brne	.+4      	; 0x190 <_Z9pinChangeii+0xfe>
 18c:	90 98       	cbi	0x12, 0	; 18
 18e:	08 95       	ret
 190:	8f 31       	cpi	r24, 0x1F	; 31
 192:	91 05       	cpc	r25, r1
 194:	11 f4       	brne	.+4      	; 0x19a <_Z9pinChangeii+0x108>
 196:	91 98       	cbi	0x12, 1	; 18
 198:	08 95       	ret
 19a:	80 32       	cpi	r24, 0x20	; 32
 19c:	91 05       	cpc	r25, r1
 19e:	11 f4       	brne	.+4      	; 0x1a4 <_Z9pinChangeii+0x112>
 1a0:	92 98       	cbi	0x12, 2	; 18
 1a2:	08 95       	ret
 1a4:	81 32       	cpi	r24, 0x21	; 33
 1a6:	91 05       	cpc	r25, r1
 1a8:	11 f4       	brne	.+4      	; 0x1ae <_Z9pinChangeii+0x11c>
 1aa:	93 98       	cbi	0x12, 3	; 18
 1ac:	08 95       	ret
 1ae:	82 32       	cpi	r24, 0x22	; 34
 1b0:	91 05       	cpc	r25, r1
 1b2:	11 f4       	brne	.+4      	; 0x1b8 <_Z9pinChangeii+0x126>
 1b4:	94 98       	cbi	0x12, 4	; 18
 1b6:	08 95       	ret
 1b8:	83 32       	cpi	r24, 0x23	; 35
 1ba:	91 05       	cpc	r25, r1
 1bc:	11 f4       	brne	.+4      	; 0x1c2 <_Z9pinChangeii+0x130>
 1be:	95 98       	cbi	0x12, 5	; 18
 1c0:	08 95       	ret
 1c2:	84 32       	cpi	r24, 0x24	; 36
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f4       	brne	.+4      	; 0x1cc <_Z9pinChangeii+0x13a>
 1c8:	96 98       	cbi	0x12, 6	; 18
 1ca:	08 95       	ret
 1cc:	85 97       	sbiw	r24, 0x25	; 37
 1ce:	09 f0       	breq	.+2      	; 0x1d2 <_Z9pinChangeii+0x140>
 1d0:	9f c0       	rjmp	.+318    	; 0x310 <_Z9pinChangeii+0x27e>
 1d2:	97 98       	cbi	0x12, 7	; 18
 1d4:	08 95       	ret
 1d6:	00 97       	sbiw	r24, 0x00	; 0
 1d8:	11 f4       	brne	.+4      	; 0x1de <_Z9pinChangeii+0x14c>
 1da:	d8 9a       	sbi	0x1b, 0	; 27
 1dc:	08 95       	ret
 1de:	81 30       	cpi	r24, 0x01	; 1
 1e0:	91 05       	cpc	r25, r1
 1e2:	11 f4       	brne	.+4      	; 0x1e8 <_Z9pinChangeii+0x156>
 1e4:	d9 9a       	sbi	0x1b, 1	; 27
 1e6:	08 95       	ret
 1e8:	82 30       	cpi	r24, 0x02	; 2
 1ea:	91 05       	cpc	r25, r1
 1ec:	11 f4       	brne	.+4      	; 0x1f2 <_Z9pinChangeii+0x160>
 1ee:	da 9a       	sbi	0x1b, 2	; 27
 1f0:	08 95       	ret
 1f2:	83 30       	cpi	r24, 0x03	; 3
 1f4:	91 05       	cpc	r25, r1
 1f6:	11 f4       	brne	.+4      	; 0x1fc <_Z9pinChangeii+0x16a>
 1f8:	db 9a       	sbi	0x1b, 3	; 27
 1fa:	08 95       	ret
 1fc:	84 30       	cpi	r24, 0x04	; 4
 1fe:	91 05       	cpc	r25, r1
 200:	11 f4       	brne	.+4      	; 0x206 <_Z9pinChangeii+0x174>
 202:	dc 9a       	sbi	0x1b, 4	; 27
 204:	08 95       	ret
 206:	85 30       	cpi	r24, 0x05	; 5
 208:	91 05       	cpc	r25, r1
 20a:	11 f4       	brne	.+4      	; 0x210 <_Z9pinChangeii+0x17e>
 20c:	dd 9a       	sbi	0x1b, 5	; 27
 20e:	08 95       	ret
 210:	86 30       	cpi	r24, 0x06	; 6
 212:	91 05       	cpc	r25, r1
 214:	11 f4       	brne	.+4      	; 0x21a <_Z9pinChangeii+0x188>
 216:	de 9a       	sbi	0x1b, 6	; 27
 218:	08 95       	ret
 21a:	87 30       	cpi	r24, 0x07	; 7
 21c:	91 05       	cpc	r25, r1
 21e:	11 f4       	brne	.+4      	; 0x224 <_Z9pinChangeii+0x192>
 220:	df 9a       	sbi	0x1b, 7	; 27
 222:	08 95       	ret
 224:	8a 30       	cpi	r24, 0x0A	; 10
 226:	91 05       	cpc	r25, r1
 228:	11 f4       	brne	.+4      	; 0x22e <_Z9pinChangeii+0x19c>
 22a:	c0 9a       	sbi	0x18, 0	; 24
 22c:	08 95       	ret
 22e:	8b 30       	cpi	r24, 0x0B	; 11
 230:	91 05       	cpc	r25, r1
 232:	11 f4       	brne	.+4      	; 0x238 <_Z9pinChangeii+0x1a6>
 234:	c1 9a       	sbi	0x18, 1	; 24
 236:	08 95       	ret
 238:	8c 30       	cpi	r24, 0x0C	; 12
 23a:	91 05       	cpc	r25, r1
 23c:	11 f4       	brne	.+4      	; 0x242 <_Z9pinChangeii+0x1b0>
 23e:	c2 9a       	sbi	0x18, 2	; 24
 240:	08 95       	ret
 242:	8d 30       	cpi	r24, 0x0D	; 13
 244:	91 05       	cpc	r25, r1
 246:	11 f4       	brne	.+4      	; 0x24c <_Z9pinChangeii+0x1ba>
 248:	c3 9a       	sbi	0x18, 3	; 24
 24a:	08 95       	ret
 24c:	8e 30       	cpi	r24, 0x0E	; 14
 24e:	91 05       	cpc	r25, r1
 250:	11 f4       	brne	.+4      	; 0x256 <_Z9pinChangeii+0x1c4>
 252:	c4 9a       	sbi	0x18, 4	; 24
 254:	08 95       	ret
 256:	8f 30       	cpi	r24, 0x0F	; 15
 258:	91 05       	cpc	r25, r1
 25a:	11 f4       	brne	.+4      	; 0x260 <_Z9pinChangeii+0x1ce>
 25c:	c5 9a       	sbi	0x18, 5	; 24
 25e:	08 95       	ret
 260:	80 31       	cpi	r24, 0x10	; 16
 262:	91 05       	cpc	r25, r1
 264:	11 f4       	brne	.+4      	; 0x26a <_Z9pinChangeii+0x1d8>
 266:	c6 9a       	sbi	0x18, 6	; 24
 268:	08 95       	ret
 26a:	81 31       	cpi	r24, 0x11	; 17
 26c:	91 05       	cpc	r25, r1
 26e:	11 f4       	brne	.+4      	; 0x274 <_Z9pinChangeii+0x1e2>
 270:	c7 9a       	sbi	0x18, 7	; 24
 272:	08 95       	ret
 274:	84 31       	cpi	r24, 0x14	; 20
 276:	91 05       	cpc	r25, r1
 278:	11 f4       	brne	.+4      	; 0x27e <_Z9pinChangeii+0x1ec>
 27a:	a8 9a       	sbi	0x15, 0	; 21
 27c:	08 95       	ret
 27e:	85 31       	cpi	r24, 0x15	; 21
 280:	91 05       	cpc	r25, r1
 282:	11 f4       	brne	.+4      	; 0x288 <_Z9pinChangeii+0x1f6>
 284:	a9 9a       	sbi	0x15, 1	; 21
 286:	08 95       	ret
 288:	86 31       	cpi	r24, 0x16	; 22
 28a:	91 05       	cpc	r25, r1
 28c:	11 f4       	brne	.+4      	; 0x292 <_Z9pinChangeii+0x200>
 28e:	aa 9a       	sbi	0x15, 2	; 21
 290:	08 95       	ret
 292:	87 31       	cpi	r24, 0x17	; 23
 294:	91 05       	cpc	r25, r1
 296:	11 f4       	brne	.+4      	; 0x29c <_Z9pinChangeii+0x20a>
 298:	ab 9a       	sbi	0x15, 3	; 21
 29a:	08 95       	ret
 29c:	88 31       	cpi	r24, 0x18	; 24
 29e:	91 05       	cpc	r25, r1
 2a0:	11 f4       	brne	.+4      	; 0x2a6 <_Z9pinChangeii+0x214>
 2a2:	ac 9a       	sbi	0x15, 4	; 21
 2a4:	08 95       	ret
 2a6:	89 31       	cpi	r24, 0x19	; 25
 2a8:	91 05       	cpc	r25, r1
 2aa:	11 f4       	brne	.+4      	; 0x2b0 <_Z9pinChangeii+0x21e>
 2ac:	ad 9a       	sbi	0x15, 5	; 21
 2ae:	08 95       	ret
 2b0:	8a 31       	cpi	r24, 0x1A	; 26
 2b2:	91 05       	cpc	r25, r1
 2b4:	11 f4       	brne	.+4      	; 0x2ba <_Z9pinChangeii+0x228>
 2b6:	ae 9a       	sbi	0x15, 6	; 21
 2b8:	08 95       	ret
 2ba:	8b 31       	cpi	r24, 0x1B	; 27
 2bc:	91 05       	cpc	r25, r1
 2be:	11 f4       	brne	.+4      	; 0x2c4 <_Z9pinChangeii+0x232>
 2c0:	af 9a       	sbi	0x15, 7	; 21
 2c2:	08 95       	ret
 2c4:	8e 31       	cpi	r24, 0x1E	; 30
 2c6:	91 05       	cpc	r25, r1
 2c8:	11 f4       	brne	.+4      	; 0x2ce <_Z9pinChangeii+0x23c>
 2ca:	90 9a       	sbi	0x12, 0	; 18
 2cc:	08 95       	ret
 2ce:	8f 31       	cpi	r24, 0x1F	; 31
 2d0:	91 05       	cpc	r25, r1
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <_Z9pinChangeii+0x246>
 2d4:	91 9a       	sbi	0x12, 1	; 18
 2d6:	08 95       	ret
 2d8:	80 32       	cpi	r24, 0x20	; 32
 2da:	91 05       	cpc	r25, r1
 2dc:	11 f4       	brne	.+4      	; 0x2e2 <_Z9pinChangeii+0x250>
 2de:	92 9a       	sbi	0x12, 2	; 18
 2e0:	08 95       	ret
 2e2:	81 32       	cpi	r24, 0x21	; 33
 2e4:	91 05       	cpc	r25, r1
 2e6:	11 f4       	brne	.+4      	; 0x2ec <_Z9pinChangeii+0x25a>
 2e8:	93 9a       	sbi	0x12, 3	; 18
 2ea:	08 95       	ret
 2ec:	82 32       	cpi	r24, 0x22	; 34
 2ee:	91 05       	cpc	r25, r1
 2f0:	11 f4       	brne	.+4      	; 0x2f6 <_Z9pinChangeii+0x264>
 2f2:	94 9a       	sbi	0x12, 4	; 18
 2f4:	08 95       	ret
 2f6:	83 32       	cpi	r24, 0x23	; 35
 2f8:	91 05       	cpc	r25, r1
 2fa:	11 f4       	brne	.+4      	; 0x300 <_Z9pinChangeii+0x26e>
 2fc:	95 9a       	sbi	0x12, 5	; 18
 2fe:	08 95       	ret
 300:	84 32       	cpi	r24, 0x24	; 36
 302:	91 05       	cpc	r25, r1
 304:	11 f4       	brne	.+4      	; 0x30a <_Z9pinChangeii+0x278>
 306:	96 9a       	sbi	0x12, 6	; 18
 308:	08 95       	ret
 30a:	85 97       	sbiw	r24, 0x25	; 37
 30c:	09 f4       	brne	.+2      	; 0x310 <_Z9pinChangeii+0x27e>
 30e:	97 9a       	sbi	0x12, 7	; 18
 310:	08 95       	ret

00000312 <_Z9Lcd4_Portc>:
 312:	cf 93       	push	r28
 314:	c8 2f       	mov	r28, r24
 316:	80 ff       	sbrs	r24, 0
 318:	07 c0       	rjmp	.+14     	; 0x328 <_Z9Lcd4_Portc+0x16>
 31a:	61 e0       	ldi	r22, 0x01	; 1
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	82 e2       	ldi	r24, 0x22	; 34
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 326:	06 c0       	rjmp	.+12     	; 0x334 <_Z9Lcd4_Portc+0x22>
 328:	60 e0       	ldi	r22, 0x00	; 0
 32a:	70 e0       	ldi	r23, 0x00	; 0
 32c:	82 e2       	ldi	r24, 0x22	; 34
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 334:	c1 ff       	sbrs	r28, 1
 336:	07 c0       	rjmp	.+14     	; 0x346 <_Z9Lcd4_Portc+0x34>
 338:	61 e0       	ldi	r22, 0x01	; 1
 33a:	70 e0       	ldi	r23, 0x00	; 0
 33c:	83 e2       	ldi	r24, 0x23	; 35
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 344:	06 c0       	rjmp	.+12     	; 0x352 <_Z9Lcd4_Portc+0x40>
 346:	60 e0       	ldi	r22, 0x00	; 0
 348:	70 e0       	ldi	r23, 0x00	; 0
 34a:	83 e2       	ldi	r24, 0x23	; 35
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 352:	c2 ff       	sbrs	r28, 2
 354:	07 c0       	rjmp	.+14     	; 0x364 <_Z9Lcd4_Portc+0x52>
 356:	61 e0       	ldi	r22, 0x01	; 1
 358:	70 e0       	ldi	r23, 0x00	; 0
 35a:	84 e2       	ldi	r24, 0x24	; 36
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 362:	06 c0       	rjmp	.+12     	; 0x370 <_Z9Lcd4_Portc+0x5e>
 364:	60 e0       	ldi	r22, 0x00	; 0
 366:	70 e0       	ldi	r23, 0x00	; 0
 368:	84 e2       	ldi	r24, 0x24	; 36
 36a:	90 e0       	ldi	r25, 0x00	; 0
 36c:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 370:	c3 ff       	sbrs	r28, 3
 372:	07 c0       	rjmp	.+14     	; 0x382 <_Z9Lcd4_Portc+0x70>
 374:	61 e0       	ldi	r22, 0x01	; 1
 376:	70 e0       	ldi	r23, 0x00	; 0
 378:	85 e2       	ldi	r24, 0x25	; 37
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 380:	06 c0       	rjmp	.+12     	; 0x38e <_Z9Lcd4_Portc+0x7c>
 382:	60 e0       	ldi	r22, 0x00	; 0
 384:	70 e0       	ldi	r23, 0x00	; 0
 386:	85 e2       	ldi	r24, 0x25	; 37
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 38e:	cf 91       	pop	r28
 390:	08 95       	ret

00000392 <_Z8Lcd4_Cmdc>:
 392:	cf 93       	push	r28
 394:	c8 2f       	mov	r28, r24
 396:	60 e0       	ldi	r22, 0x00	; 0
 398:	70 e0       	ldi	r23, 0x00	; 0
 39a:	8a e1       	ldi	r24, 0x1A	; 26
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 3a2:	8c 2f       	mov	r24, r28
 3a4:	0e 94 89 01 	call	0x312	; 0x312 <_Z9Lcd4_Portc>
 3a8:	61 e0       	ldi	r22, 0x01	; 1
 3aa:	70 e0       	ldi	r23, 0x00	; 0
 3ac:	8b e1       	ldi	r24, 0x1B	; 27
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 3b4:	89 ef       	ldi	r24, 0xF9	; 249
 3b6:	90 e0       	ldi	r25, 0x00	; 0
 3b8:	01 97       	sbiw	r24, 0x01	; 1
 3ba:	f1 f7       	brne	.-4      	; 0x3b8 <_Z8Lcd4_Cmdc+0x26>
 3bc:	00 c0       	rjmp	.+0      	; 0x3be <_Z8Lcd4_Cmdc+0x2c>
 3be:	00 00       	nop
 3c0:	60 e0       	ldi	r22, 0x00	; 0
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	8b e1       	ldi	r24, 0x1B	; 27
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 3cc:	89 ef       	ldi	r24, 0xF9	; 249
 3ce:	90 e0       	ldi	r25, 0x00	; 0
 3d0:	01 97       	sbiw	r24, 0x01	; 1
 3d2:	f1 f7       	brne	.-4      	; 0x3d0 <_Z8Lcd4_Cmdc+0x3e>
 3d4:	00 c0       	rjmp	.+0      	; 0x3d6 <_Z8Lcd4_Cmdc+0x44>
 3d6:	00 00       	nop
 3d8:	cf 91       	pop	r28
 3da:	08 95       	ret

000003dc <_Z10Lcd4_Clearv>:
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 3e2:	81 e0       	ldi	r24, 0x01	; 1
 3e4:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 3e8:	08 95       	ret

000003ea <_Z15Lcd4_Set_Cursorcc>:
 3ea:	cf 93       	push	r28
 3ec:	c6 2f       	mov	r28, r22
 3ee:	81 30       	cpi	r24, 0x01	; 1
 3f0:	59 f4       	brne	.+22     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
 3f2:	80 e8       	ldi	r24, 0x80	; 128
 3f4:	86 0f       	add	r24, r22
 3f6:	82 95       	swap	r24
 3f8:	8f 70       	andi	r24, 0x0F	; 15
 3fa:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 3fe:	8c 2f       	mov	r24, r28
 400:	8f 70       	andi	r24, 0x0F	; 15
 402:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 406:	0c c0       	rjmp	.+24     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 408:	82 30       	cpi	r24, 0x02	; 2
 40a:	51 f4       	brne	.+20     	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
 40c:	80 ec       	ldi	r24, 0xC0	; 192
 40e:	86 0f       	add	r24, r22
 410:	82 95       	swap	r24
 412:	8f 70       	andi	r24, 0x0F	; 15
 414:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 418:	8c 2f       	mov	r24, r28
 41a:	8f 70       	andi	r24, 0x0F	; 15
 41c:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 420:	cf 91       	pop	r28
 422:	08 95       	ret

00000424 <_Z9Lcd4_Initv>:
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	0e 94 89 01 	call	0x312	; 0x312 <_Z9Lcd4_Portc>
 42a:	87 e8       	ldi	r24, 0x87	; 135
 42c:	93 e1       	ldi	r25, 0x13	; 19
 42e:	01 97       	sbiw	r24, 0x01	; 1
 430:	f1 f7       	brne	.-4      	; 0x42e <_Z9Lcd4_Initv+0xa>
 432:	00 c0       	rjmp	.+0      	; 0x434 <_Z9Lcd4_Initv+0x10>
 434:	00 00       	nop
 436:	83 e0       	ldi	r24, 0x03	; 3
 438:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 43c:	81 ee       	ldi	r24, 0xE1	; 225
 43e:	94 e0       	ldi	r25, 0x04	; 4
 440:	01 97       	sbiw	r24, 0x01	; 1
 442:	f1 f7       	brne	.-4      	; 0x440 <_Z9Lcd4_Initv+0x1c>
 444:	00 c0       	rjmp	.+0      	; 0x446 <_Z9Lcd4_Initv+0x22>
 446:	00 00       	nop
 448:	83 e0       	ldi	r24, 0x03	; 3
 44a:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 44e:	8d eb       	ldi	r24, 0xBD	; 189
 450:	9a e0       	ldi	r25, 0x0A	; 10
 452:	01 97       	sbiw	r24, 0x01	; 1
 454:	f1 f7       	brne	.-4      	; 0x452 <_Z9Lcd4_Initv+0x2e>
 456:	00 c0       	rjmp	.+0      	; 0x458 <_Z9Lcd4_Initv+0x34>
 458:	00 00       	nop
 45a:	83 e0       	ldi	r24, 0x03	; 3
 45c:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 460:	82 e0       	ldi	r24, 0x02	; 2
 462:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 466:	82 e0       	ldi	r24, 0x02	; 2
 468:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 46c:	88 e0       	ldi	r24, 0x08	; 8
 46e:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 472:	80 e0       	ldi	r24, 0x00	; 0
 474:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 478:	8c e0       	ldi	r24, 0x0C	; 12
 47a:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 47e:	80 e0       	ldi	r24, 0x00	; 0
 480:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 484:	86 e0       	ldi	r24, 0x06	; 6
 486:	0e 94 c9 01 	call	0x392	; 0x392 <_Z8Lcd4_Cmdc>
 48a:	08 95       	ret

0000048c <_Z15Lcd4_Write_Charc>:
 48c:	cf 93       	push	r28
 48e:	c8 2f       	mov	r28, r24
 490:	61 e0       	ldi	r22, 0x01	; 1
 492:	70 e0       	ldi	r23, 0x00	; 0
 494:	8a e1       	ldi	r24, 0x1A	; 26
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 49c:	8c 2f       	mov	r24, r28
 49e:	82 95       	swap	r24
 4a0:	8f 70       	andi	r24, 0x0F	; 15
 4a2:	0e 94 89 01 	call	0x312	; 0x312 <_Z9Lcd4_Portc>
 4a6:	61 e0       	ldi	r22, 0x01	; 1
 4a8:	70 e0       	ldi	r23, 0x00	; 0
 4aa:	8b e1       	ldi	r24, 0x1B	; 27
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 4b2:	89 ef       	ldi	r24, 0xF9	; 249
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	01 97       	sbiw	r24, 0x01	; 1
 4b8:	f1 f7       	brne	.-4      	; 0x4b6 <_Z15Lcd4_Write_Charc+0x2a>
 4ba:	00 c0       	rjmp	.+0      	; 0x4bc <_Z15Lcd4_Write_Charc+0x30>
 4bc:	00 00       	nop
 4be:	60 e0       	ldi	r22, 0x00	; 0
 4c0:	70 e0       	ldi	r23, 0x00	; 0
 4c2:	8b e1       	ldi	r24, 0x1B	; 27
 4c4:	90 e0       	ldi	r25, 0x00	; 0
 4c6:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 4ca:	89 ef       	ldi	r24, 0xF9	; 249
 4cc:	90 e0       	ldi	r25, 0x00	; 0
 4ce:	01 97       	sbiw	r24, 0x01	; 1
 4d0:	f1 f7       	brne	.-4      	; 0x4ce <_Z15Lcd4_Write_Charc+0x42>
 4d2:	00 c0       	rjmp	.+0      	; 0x4d4 <_Z15Lcd4_Write_Charc+0x48>
 4d4:	00 00       	nop
 4d6:	8c 2f       	mov	r24, r28
 4d8:	8f 70       	andi	r24, 0x0F	; 15
 4da:	0e 94 89 01 	call	0x312	; 0x312 <_Z9Lcd4_Portc>
 4de:	61 e0       	ldi	r22, 0x01	; 1
 4e0:	70 e0       	ldi	r23, 0x00	; 0
 4e2:	8b e1       	ldi	r24, 0x1B	; 27
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 4ea:	89 ef       	ldi	r24, 0xF9	; 249
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	01 97       	sbiw	r24, 0x01	; 1
 4f0:	f1 f7       	brne	.-4      	; 0x4ee <_Z15Lcd4_Write_Charc+0x62>
 4f2:	00 c0       	rjmp	.+0      	; 0x4f4 <_Z15Lcd4_Write_Charc+0x68>
 4f4:	00 00       	nop
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	70 e0       	ldi	r23, 0x00	; 0
 4fa:	8b e1       	ldi	r24, 0x1B	; 27
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	0e 94 49 00 	call	0x92	; 0x92 <_Z9pinChangeii>
 502:	89 ef       	ldi	r24, 0xF9	; 249
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	01 97       	sbiw	r24, 0x01	; 1
 508:	f1 f7       	brne	.-4      	; 0x506 <_Z15Lcd4_Write_Charc+0x7a>
 50a:	00 c0       	rjmp	.+0      	; 0x50c <_Z15Lcd4_Write_Charc+0x80>
 50c:	00 00       	nop
 50e:	cf 91       	pop	r28
 510:	08 95       	ret

00000512 <_Z17Lcd4_Write_StringPc>:
 512:	cf 93       	push	r28
 514:	df 93       	push	r29
 516:	ec 01       	movw	r28, r24
 518:	88 81       	ld	r24, Y
 51a:	88 23       	and	r24, r24
 51c:	31 f0       	breq	.+12     	; 0x52a <_Z17Lcd4_Write_StringPc+0x18>
 51e:	21 96       	adiw	r28, 0x01	; 1
 520:	0e 94 46 02 	call	0x48c	; 0x48c <_Z15Lcd4_Write_Charc>
 524:	89 91       	ld	r24, Y+
 526:	81 11       	cpse	r24, r1
 528:	fb cf       	rjmp	.-10     	; 0x520 <_Z17Lcd4_Write_StringPc+0xe>
 52a:	df 91       	pop	r29
 52c:	cf 91       	pop	r28
 52e:	08 95       	ret

00000530 <_Z7Requestv>:
 530:	8b 9a       	sbi	0x11, 3	; 17
 532:	93 98       	cbi	0x12, 3	; 18
 534:	87 e8       	ldi	r24, 0x87	; 135
 536:	93 e1       	ldi	r25, 0x13	; 19
 538:	01 97       	sbiw	r24, 0x01	; 1
 53a:	f1 f7       	brne	.-4      	; 0x538 <_Z7Requestv+0x8>
 53c:	00 c0       	rjmp	.+0      	; 0x53e <_Z7Requestv+0xe>
 53e:	00 00       	nop
 540:	93 9a       	sbi	0x12, 3	; 18
 542:	08 95       	ret

00000544 <_Z8Responsev>:
 544:	8b 98       	cbi	0x11, 3	; 17
 546:	83 99       	sbic	0x10, 3	; 16
 548:	fe cf       	rjmp	.-4      	; 0x546 <_Z8Responsev+0x2>
 54a:	83 9b       	sbis	0x10, 3	; 16
 54c:	fe cf       	rjmp	.-4      	; 0x54a <_Z8Responsev+0x6>
 54e:	83 99       	sbic	0x10, 3	; 16
 550:	fe cf       	rjmp	.-4      	; 0x54e <_Z8Responsev+0xa>
 552:	08 95       	ret

00000554 <_Z12Receive_datav>:
 554:	88 e0       	ldi	r24, 0x08	; 8
 556:	90 e0       	ldi	r25, 0x00	; 0
 558:	83 9b       	sbis	0x10, 3	; 16
 55a:	fe cf       	rjmp	.-4      	; 0x558 <_Z12Receive_datav+0x4>
 55c:	2a e0       	ldi	r18, 0x0A	; 10
 55e:	2a 95       	dec	r18
 560:	f1 f7       	brne	.-4      	; 0x55e <_Z12Receive_datav+0xa>
 562:	83 9b       	sbis	0x10, 3	; 16
 564:	07 c0       	rjmp	.+14     	; 0x574 <_Z12Receive_datav+0x20>
 566:	20 91 a5 00 	lds	r18, 0x00A5	; 0x8000a5 <c>
 56a:	22 0f       	add	r18, r18
 56c:	21 60       	ori	r18, 0x01	; 1
 56e:	20 93 a5 00 	sts	0x00A5, r18	; 0x8000a5 <c>
 572:	05 c0       	rjmp	.+10     	; 0x57e <_Z12Receive_datav+0x2a>
 574:	20 91 a5 00 	lds	r18, 0x00A5	; 0x8000a5 <c>
 578:	22 0f       	add	r18, r18
 57a:	20 93 a5 00 	sts	0x00A5, r18	; 0x8000a5 <c>
 57e:	83 99       	sbic	0x10, 3	; 16
 580:	fe cf       	rjmp	.-4      	; 0x57e <_Z12Receive_datav+0x2a>
 582:	01 97       	sbiw	r24, 0x01	; 1
 584:	49 f7       	brne	.-46     	; 0x558 <_Z12Receive_datav+0x4>
 586:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <c>
 58a:	08 95       	ret

0000058c <_Z7InitADCv>:
 58c:	80 e4       	ldi	r24, 0x40	; 64
 58e:	87 b9       	out	0x07, r24	; 7
 590:	87 e8       	ldi	r24, 0x87	; 135
 592:	86 b9       	out	0x06, r24	; 6
 594:	08 95       	ret

00000596 <_Z7ReadADCh>:
 596:	97 b1       	in	r25, 0x07	; 7
 598:	90 7e       	andi	r25, 0xE0	; 224
 59a:	97 b9       	out	0x07, r25	; 7
 59c:	97 b1       	in	r25, 0x07	; 7
 59e:	87 70       	andi	r24, 0x07	; 7
 5a0:	98 2b       	or	r25, r24
 5a2:	97 b9       	out	0x07, r25	; 7
 5a4:	36 9a       	sbi	0x06, 6	; 6
 5a6:	34 9b       	sbis	0x06, 4	; 6
 5a8:	fe cf       	rjmp	.-4      	; 0x5a6 <_Z7ReadADCh+0x10>
 5aa:	34 9a       	sbi	0x06, 4	; 6
 5ac:	84 b1       	in	r24, 0x04	; 4
 5ae:	95 b1       	in	r25, 0x05	; 5
 5b0:	08 95       	ret

000005b2 <_Z10convertstri>:
 5b2:	4a e0       	ldi	r20, 0x0A	; 10
 5b4:	66 ea       	ldi	r22, 0xA6	; 166
 5b6:	70 e0       	ldi	r23, 0x00	; 0
 5b8:	0e 94 0f 04 	call	0x81e	; 0x81e <__itoa_ncheck>
 5bc:	08 95       	ret

000005be <_Z9USARTInitj>:
 5be:	89 b9       	out	0x09, r24	; 9
 5c0:	90 bd       	out	0x20, r25	; 32
 5c2:	82 e0       	ldi	r24, 0x02	; 2
 5c4:	8b b9       	out	0x0b, r24	; 11
 5c6:	86 e8       	ldi	r24, 0x86	; 134
 5c8:	80 bd       	out	0x20, r24	; 32
 5ca:	88 e1       	ldi	r24, 0x18	; 24
 5cc:	8a b9       	out	0x0a, r24	; 10
 5ce:	08 95       	ret

000005d0 <_Z11BtWriteCharc>:


void BtWriteChar(char data){
	while(!(UCSRA & (1<<UDRE)))
 5d0:	5d 9b       	sbis	0x0b, 5	; 11
 5d2:	fe cf       	rjmp	.-4      	; 0x5d0 <_Z11BtWriteCharc>
	{
	}
	UDR=data;
 5d4:	8c b9       	out	0x0c, r24	; 12
 5d6:	08 95       	ret

000005d8 <_Z8BtStringPc>:
}

void BtString(char *str){
 5d8:	cf 93       	push	r28
 5da:	df 93       	push	r29
 5dc:	ec 01       	movw	r28, r24
	int i;
	for(i=0; ; i++){
		if(str[i]=='\0')
 5de:	88 81       	ld	r24, Y
 5e0:	88 23       	and	r24, r24
 5e2:	31 f0       	breq	.+12     	; 0x5f0 <_Z8BtStringPc+0x18>
 5e4:	21 96       	adiw	r28, 0x01	; 1
		break;
		BtWriteChar(str[i]);
 5e6:	0e 94 e8 02 	call	0x5d0	; 0x5d0 <_Z11BtWriteCharc>
}

void BtString(char *str){
	int i;
	for(i=0; ; i++){
		if(str[i]=='\0')
 5ea:	89 91       	ld	r24, Y+
 5ec:	81 11       	cpse	r24, r1
 5ee:	fb cf       	rjmp	.-10     	; 0x5e6 <_Z8BtStringPc+0xe>
		break;
		BtWriteChar(str[i]);
	}
}
 5f0:	df 91       	pop	r29
 5f2:	cf 91       	pop	r28
 5f4:	08 95       	ret

000005f6 <main>:


int main(void){
 5f6:	cf 93       	push	r28
 5f8:	df 93       	push	r29
 5fa:	cd b7       	in	r28, 0x3d	; 61
 5fc:	de b7       	in	r29, 0x3e	; 62
 5fe:	6e 97       	sbiw	r28, 0x1e	; 30
 600:	0f b6       	in	r0, 0x3f	; 63
 602:	f8 94       	cli
 604:	de bf       	out	0x3e, r29	; 62
 606:	0f be       	out	0x3f, r0	; 63
 608:	cd bf       	out	0x3d, r28	; 61
	
	DDRD |= (1<<4);
 60a:	8c 9a       	sbi	0x11, 4	; 17
	DDRD |= (1<<5);
 60c:	8d 9a       	sbi	0x11, 5	; 17
	DDRD |= (1<<6);
 60e:	8e 9a       	sbi	0x11, 6	; 17
	DDRD |= (1<<7);	
 610:	8f 9a       	sbi	0x11, 7	; 17
	DDRC = 0xFF;
 612:	8f ef       	ldi	r24, 0xFF	; 255
 614:	84 bb       	out	0x14, r24	; 20
	
	DDRB = 0xFF;  //relay output
 616:	87 bb       	out	0x17, r24	; 23
	PORTB = 0xFF;  //  pull up for button
 618:	88 bb       	out	0x18, r24	; 24
	
	
	Lcd4_Init();
 61a:	0e 94 12 02 	call	0x424	; 0x424 <_Z9Lcd4_Initv>
	InitADC();
 61e:	0e 94 c6 02 	call	0x58c	; 0x58c <_Z7InitADCv>
	USARTInit(12); //12 double 51
 622:	8c e0       	ldi	r24, 0x0C	; 12
 624:	90 e0       	ldi	r25, 0x00	; 0
 626:	0e 94 df 02 	call	0x5be	; 0x5be <_Z9USARTInitj>
	
	
	

	while(1){
		char datastr[30] = "data:-";
 62a:	8e 01       	movw	r16, r28
 62c:	0f 5f       	subi	r16, 0xFF	; 255
 62e:	1f 4f       	sbci	r17, 0xFF	; 255
 630:	0f 2e       	mov	r0, r31
 632:	f7 e1       	ldi	r31, 0x17	; 23
 634:	7f 2e       	mov	r7, r31
 636:	f0 2d       	mov	r31, r0
 638:	6e 01       	movw	r12, r28
 63a:	28 e0       	ldi	r18, 0x08	; 8
 63c:	c2 0e       	add	r12, r18
 63e:	d1 1c       	adc	r13, r1
			Lcd4_Write_String("temp:- ");
			Lcd4_Write_String(str);
			
			#ifndef NOSEARIAL 
			strcat(datastr, str);
			strcat(datastr, ".");
 640:	0f 2e       	mov	r0, r31
 642:	fe e2       	ldi	r31, 0x2E	; 46
 644:	af 2e       	mov	r10, r31
 646:	b1 2c       	mov	r11, r1
 648:	f0 2d       	mov	r31, r0
			Lcd4_Write_String(".");
			Lcd4_Write_String(str);
			
			#ifndef NOSEARIAL
			strcat(datastr, str);
			strcat(datastr, ",");
 64a:	0f 2e       	mov	r0, r31
 64c:	fc e2       	ldi	r31, 0x2C	; 44
 64e:	ef 2e       	mov	r14, r31
 650:	f1 2c       	mov	r15, r1
 652:	f0 2d       	mov	r31, r0
	
	
	

	while(1){
		char datastr[30] = "data:-";
 654:	87 e0       	ldi	r24, 0x07	; 7
 656:	e0 e6       	ldi	r30, 0x60	; 96
 658:	f0 e0       	ldi	r31, 0x00	; 0
 65a:	d8 01       	movw	r26, r16
 65c:	01 90       	ld	r0, Z+
 65e:	0d 92       	st	X+, r0
 660:	8a 95       	dec	r24
 662:	e1 f7       	brne	.-8      	; 0x65c <main+0x66>
 664:	f6 01       	movw	r30, r12
 666:	27 2d       	mov	r18, r7
 668:	11 92       	st	Z+, r1
 66a:	2a 95       	dec	r18
 66c:	e9 f7       	brne	.-6      	; 0x668 <main+0x72>
		int adcval;
		int airval;
		
		Request();		/* send start pulse */
 66e:	0e 94 98 02 	call	0x530	; 0x530 <_Z7Requestv>
		Response();		/* receive response */
 672:	0e 94 a2 02 	call	0x544	; 0x544 <_Z8Responsev>
		I_RH=Receive_data();	/* store first eight bit in I_RH */
 676:	0e 94 aa 02 	call	0x554	; 0x554 <_Z12Receive_datav>
 67a:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <I_RH>
		D_RH=Receive_data();	/* store next eight bit in D_RH */
 67e:	0e 94 aa 02 	call	0x554	; 0x554 <_Z12Receive_datav>
 682:	80 93 a3 00 	sts	0x00A3, r24	; 0x8000a3 <D_RH>
		I_Temp=Receive_data();	/* store next eight bit in I_Temp */
 686:	0e 94 aa 02 	call	0x554	; 0x554 <_Z12Receive_datav>
 68a:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <I_Temp>
		D_Temp=Receive_data();	/* store next eight bit in D_Temp */
 68e:	0e 94 aa 02 	call	0x554	; 0x554 <_Z12Receive_datav>
 692:	80 93 a1 00 	sts	0x00A1, r24	; 0x8000a1 <D_Temp>
		CheckSum=Receive_data();/* store next eight bit in CheckSum */
 696:	0e 94 aa 02 	call	0x554	; 0x554 <_Z12Receive_datav>
 69a:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <__data_end>
		
		if ((I_RH + D_RH + I_Temp + D_Temp) != CheckSum)
 69e:	90 91 a4 00 	lds	r25, 0x00A4	; 0x8000a4 <I_RH>
 6a2:	20 91 a3 00 	lds	r18, 0x00A3	; 0x8000a3 <D_RH>
 6a6:	30 e0       	ldi	r19, 0x00	; 0
 6a8:	29 0f       	add	r18, r25
 6aa:	31 1d       	adc	r19, r1
 6ac:	90 91 a2 00 	lds	r25, 0x00A2	; 0x8000a2 <I_Temp>
 6b0:	29 0f       	add	r18, r25
 6b2:	31 1d       	adc	r19, r1
 6b4:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <D_Temp>
 6b8:	29 0f       	add	r18, r25
 6ba:	31 1d       	adc	r19, r1
 6bc:	90 e0       	ldi	r25, 0x00	; 0
 6be:	28 17       	cp	r18, r24
 6c0:	39 07       	cpc	r19, r25
 6c2:	39 f0       	breq	.+14     	; 0x6d2 <main+0xdc>
		{
			Lcd4_Clear();
 6c4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z10Lcd4_Clearv>
			Lcd4_Write_String("Error Dh11");
 6c8:	8e e7       	ldi	r24, 0x7E	; 126
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
 6d0:	51 c0       	rjmp	.+162    	; 0x774 <main+0x17e>
		}
		
		else
		{
			Lcd4_Clear();
 6d2:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z10Lcd4_Clearv>
			convertstr(I_Temp);
 6d6:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <I_Temp>
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_Z10convertstri>
			Lcd4_Write_String("temp:- ");
 6e0:	89 e8       	ldi	r24, 0x89	; 137
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
			Lcd4_Write_String(str);
 6e8:	86 ea       	ldi	r24, 0xA6	; 166
 6ea:	90 e0       	ldi	r25, 0x00	; 0
 6ec:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
			
			#ifndef NOSEARIAL 
			strcat(datastr, str);
 6f0:	66 ea       	ldi	r22, 0xA6	; 166
 6f2:	70 e0       	ldi	r23, 0x00	; 0
 6f4:	c8 01       	movw	r24, r16
 6f6:	0e 94 04 04 	call	0x808	; 0x808 <strcat>
			strcat(datastr, ".");
 6fa:	f8 01       	movw	r30, r16
 6fc:	01 90       	ld	r0, Z+
 6fe:	00 20       	and	r0, r0
 700:	e9 f7       	brne	.-6      	; 0x6fc <main+0x106>
 702:	31 97       	sbiw	r30, 0x01	; 1
 704:	b1 82       	std	Z+1, r11	; 0x01
 706:	a0 82       	st	Z, r10
			#endif
			
			convertstr(D_Temp);
 708:	80 91 a1 00 	lds	r24, 0x00A1	; 0x8000a1 <D_Temp>
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_Z10convertstri>
			Lcd4_Write_String(".");
 712:	81 e9       	ldi	r24, 0x91	; 145
 714:	90 e0       	ldi	r25, 0x00	; 0
 716:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
			Lcd4_Write_String(str);
 71a:	86 ea       	ldi	r24, 0xA6	; 166
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
			
			#ifndef NOSEARIAL
			strcat(datastr, str);
 722:	66 ea       	ldi	r22, 0xA6	; 166
 724:	70 e0       	ldi	r23, 0x00	; 0
 726:	c8 01       	movw	r24, r16
 728:	0e 94 04 04 	call	0x808	; 0x808 <strcat>
			strcat(datastr, ",");
 72c:	f8 01       	movw	r30, r16
 72e:	01 90       	ld	r0, Z+
 730:	00 20       	and	r0, r0
 732:	e9 f7       	brne	.-6      	; 0x72e <main+0x138>
 734:	31 97       	sbiw	r30, 0x01	; 1
 736:	f1 82       	std	Z+1, r15	; 0x01
 738:	e0 82       	st	Z, r14
			#endif
			
		
			
			Lcd4_Set_Cursor(2,0);
 73a:	60 e0       	ldi	r22, 0x00	; 0
 73c:	82 e0       	ldi	r24, 0x02	; 2
 73e:	0e 94 f5 01 	call	0x3ea	; 0x3ea <_Z15Lcd4_Set_Cursorcc>
			convertstr(I_RH);
 742:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <I_RH>
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_Z10convertstri>
			Lcd4_Write_String("Hum:- ");
 74c:	83 e9       	ldi	r24, 0x93	; 147
 74e:	90 e0       	ldi	r25, 0x00	; 0
 750:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
			Lcd4_Write_String(str);
 754:	86 ea       	ldi	r24, 0xA6	; 166
 756:	90 e0       	ldi	r25, 0x00	; 0
 758:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
			
			#ifndef NOSEARIAL
			strcat(datastr, str);
 75c:	66 ea       	ldi	r22, 0xA6	; 166
 75e:	70 e0       	ldi	r23, 0x00	; 0
 760:	c8 01       	movw	r24, r16
 762:	0e 94 04 04 	call	0x808	; 0x808 <strcat>
			strcat(datastr, ",");
 766:	f8 01       	movw	r30, r16
 768:	01 90       	ld	r0, Z+
 76a:	00 20       	and	r0, r0
 76c:	e9 f7       	brne	.-6      	; 0x768 <main+0x172>
 76e:	31 97       	sbiw	r30, 0x01	; 1
 770:	f1 82       	std	Z+1, r15	; 0x01
 772:	e0 82       	st	Z, r14
		
		
		
		
		
		Lcd4_Write_String(" A6=");
 774:	8a e9       	ldi	r24, 0x9A	; 154
 776:	90 e0       	ldi	r25, 0x00	; 0
 778:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
		 airval = ReadADC(0);
 77c:	80 e0       	ldi	r24, 0x00	; 0
 77e:	0e 94 cb 02 	call	0x596	; 0x596 <_Z7ReadADCh>
 782:	4c 01       	movw	r8, r24
		convertstr(airval);
 784:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_Z10convertstri>
		Lcd4_Write_String(str);
 788:	86 ea       	ldi	r24, 0xA6	; 166
 78a:	90 e0       	ldi	r25, 0x00	; 0
 78c:	0e 94 89 02 	call	0x512	; 0x512 <_Z17Lcd4_Write_StringPc>
		
		#ifndef NOSEARIAL
		strcat(datastr, str);
 790:	66 ea       	ldi	r22, 0xA6	; 166
 792:	70 e0       	ldi	r23, 0x00	; 0
 794:	c8 01       	movw	r24, r16
 796:	0e 94 04 04 	call	0x808	; 0x808 <strcat>
		strcat(datastr, ",");
 79a:	f8 01       	movw	r30, r16
 79c:	01 90       	ld	r0, Z+
 79e:	00 20       	and	r0, r0
 7a0:	e9 f7       	brne	.-6      	; 0x79c <main+0x1a6>
 7a2:	31 97       	sbiw	r30, 0x01	; 1
 7a4:	f1 82       	std	Z+1, r15	; 0x01
 7a6:	e0 82       	st	Z, r14
		#endif
		
		adcval = ReadADC(1);
 7a8:	81 e0       	ldi	r24, 0x01	; 1
 7aa:	0e 94 cb 02 	call	0x596	; 0x596 <_Z7ReadADCh>
		convertstr(adcval);
 7ae:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <_Z10convertstri>
		
		#ifndef NOSEARIAL
		strcat(datastr, str);
 7b2:	66 ea       	ldi	r22, 0xA6	; 166
 7b4:	70 e0       	ldi	r23, 0x00	; 0
 7b6:	c8 01       	movw	r24, r16
 7b8:	0e 94 04 04 	call	0x808	; 0x808 <strcat>
		strcat(datastr, ",");
 7bc:	f8 01       	movw	r30, r16
 7be:	01 90       	ld	r0, Z+
 7c0:	00 20       	and	r0, r0
 7c2:	e9 f7       	brne	.-6      	; 0x7be <main+0x1c8>
 7c4:	31 97       	sbiw	r30, 0x01	; 1
 7c6:	f1 82       	std	Z+1, r15	; 0x01
 7c8:	e0 82       	st	Z, r14
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7ca:	8f e3       	ldi	r24, 0x3F	; 63
 7cc:	9d e0       	ldi	r25, 0x0D	; 13
 7ce:	e3 e0       	ldi	r30, 0x03	; 3
 7d0:	81 50       	subi	r24, 0x01	; 1
 7d2:	90 40       	sbci	r25, 0x00	; 0
 7d4:	e0 40       	sbci	r30, 0x00	; 0
 7d6:	e1 f7       	brne	.-8      	; 0x7d0 <main+0x1da>
 7d8:	00 c0       	rjmp	.+0      	; 0x7da <main+0x1e4>
 7da:	00 00       	nop
		#endif
		
		
		
		_delay_ms(1000);
		Lcd4_Clear();
 7dc:	0e 94 ee 01 	call	0x3dc	; 0x3dc <_Z10Lcd4_Clearv>
		//strcat(aa,"\n");
		*/
		
		
		//BtString(" ishara thilina\n");
		BtString(datastr);
 7e0:	c8 01       	movw	r24, r16
 7e2:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <_Z8BtStringPc>
		
		if(I_Temp>28){
 7e6:	80 91 a2 00 	lds	r24, 0x00A2	; 0x8000a2 <I_Temp>
 7ea:	8d 31       	cpi	r24, 0x1D	; 29
 7ec:	10 f0       	brcs	.+4      	; 0x7f2 <main+0x1fc>
			PORTB = (0<<0);  // on fan relay	
 7ee:	18 ba       	out	0x18, r1	; 24
 7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <main+0x200>
		}else{
			PORTB = (1<<0);  // off fan relay		
 7f2:	81 e0       	ldi	r24, 0x01	; 1
 7f4:	88 bb       	out	0x18, r24	; 24
		}
		
		
		
		if(airval>200){
 7f6:	f9 ec       	ldi	r31, 0xC9	; 201
 7f8:	8f 16       	cp	r8, r31
 7fa:	91 04       	cpc	r9, r1
 7fc:	14 f0       	brlt	.+4      	; 0x802 <main+0x20c>
			PORTB = (0<<1);  // on fan relay
 7fe:	18 ba       	out	0x18, r1	; 24
 800:	29 cf       	rjmp	.-430    	; 0x654 <main+0x5e>
			}else{
			PORTB = (1<<1);  // off fan relay
 802:	82 e0       	ldi	r24, 0x02	; 2
 804:	88 bb       	out	0x18, r24	; 24
	
	
	
	

	while(1){
 806:	26 cf       	rjmp	.-436    	; 0x654 <main+0x5e>

00000808 <strcat>:
 808:	fb 01       	movw	r30, r22
 80a:	dc 01       	movw	r26, r24
 80c:	0d 90       	ld	r0, X+
 80e:	00 20       	and	r0, r0
 810:	e9 f7       	brne	.-6      	; 0x80c <strcat+0x4>
 812:	11 97       	sbiw	r26, 0x01	; 1
 814:	01 90       	ld	r0, Z+
 816:	0d 92       	st	X+, r0
 818:	00 20       	and	r0, r0
 81a:	e1 f7       	brne	.-8      	; 0x814 <strcat+0xc>
 81c:	08 95       	ret

0000081e <__itoa_ncheck>:
 81e:	bb 27       	eor	r27, r27
 820:	4a 30       	cpi	r20, 0x0A	; 10
 822:	31 f4       	brne	.+12     	; 0x830 <__itoa_ncheck+0x12>
 824:	99 23       	and	r25, r25
 826:	22 f4       	brpl	.+8      	; 0x830 <__itoa_ncheck+0x12>
 828:	bd e2       	ldi	r27, 0x2D	; 45
 82a:	90 95       	com	r25
 82c:	81 95       	neg	r24
 82e:	9f 4f       	sbci	r25, 0xFF	; 255
 830:	0c 94 1b 04 	jmp	0x836	; 0x836 <__utoa_common>

00000834 <__utoa_ncheck>:
 834:	bb 27       	eor	r27, r27

00000836 <__utoa_common>:
 836:	fb 01       	movw	r30, r22
 838:	55 27       	eor	r21, r21
 83a:	aa 27       	eor	r26, r26
 83c:	88 0f       	add	r24, r24
 83e:	99 1f       	adc	r25, r25
 840:	aa 1f       	adc	r26, r26
 842:	a4 17       	cp	r26, r20
 844:	10 f0       	brcs	.+4      	; 0x84a <__utoa_common+0x14>
 846:	a4 1b       	sub	r26, r20
 848:	83 95       	inc	r24
 84a:	50 51       	subi	r21, 0x10	; 16
 84c:	b9 f7       	brne	.-18     	; 0x83c <__utoa_common+0x6>
 84e:	a0 5d       	subi	r26, 0xD0	; 208
 850:	aa 33       	cpi	r26, 0x3A	; 58
 852:	08 f0       	brcs	.+2      	; 0x856 <__utoa_common+0x20>
 854:	a9 5d       	subi	r26, 0xD9	; 217
 856:	a1 93       	st	Z+, r26
 858:	00 97       	sbiw	r24, 0x00	; 0
 85a:	79 f7       	brne	.-34     	; 0x83a <__utoa_common+0x4>
 85c:	b1 11       	cpse	r27, r1
 85e:	b1 93       	st	Z+, r27
 860:	11 92       	st	Z+, r1
 862:	cb 01       	movw	r24, r22
 864:	0c 94 34 04 	jmp	0x868	; 0x868 <strrev>

00000868 <strrev>:
 868:	dc 01       	movw	r26, r24
 86a:	fc 01       	movw	r30, r24
 86c:	67 2f       	mov	r22, r23
 86e:	71 91       	ld	r23, Z+
 870:	77 23       	and	r23, r23
 872:	e1 f7       	brne	.-8      	; 0x86c <strrev+0x4>
 874:	32 97       	sbiw	r30, 0x02	; 2
 876:	04 c0       	rjmp	.+8      	; 0x880 <strrev+0x18>
 878:	7c 91       	ld	r23, X
 87a:	6d 93       	st	X+, r22
 87c:	70 83       	st	Z, r23
 87e:	62 91       	ld	r22, -Z
 880:	ae 17       	cp	r26, r30
 882:	bf 07       	cpc	r27, r31
 884:	c8 f3       	brcs	.-14     	; 0x878 <strrev+0x10>
 886:	08 95       	ret

00000888 <_exit>:
 888:	f8 94       	cli

0000088a <__stop_program>:
 88a:	ff cf       	rjmp	.-2      	; 0x88a <__stop_program>
